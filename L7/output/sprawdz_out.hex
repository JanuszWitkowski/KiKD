00000000: 2369 6e63 6c75 6465 203c 696f 7374 7265  #include <iostre
00000010: 616d 3e0a 2369 6e63 6c75 6465 203c 6d65  am>.#include <me
00000020: 6d6f 7279 3e0a 2369 6e63 6c75 6465 2022  mory>.#include "
00000030: 6269 7472 772e 6868 220a 2369 6e63 6c75  bitrw.hh".#inclu
00000040: 6465 2022 636f 6e73 7473 2e68 6822 0a0a  de "consts.hh"..
00000050: 7573 696e 6720 6e61 6d65 7370 6163 6520  using namespace 
00000060: 7374 643b 0a0a 7369 7a65 5f74 2073 7072  std;..size_t spr
00000070: 6177 647a 2873 7472 696e 6720 696e 312c  awdz(string in1,
00000080: 2073 7472 696e 6720 696e 3229 207b 0a20   string in2) {. 
00000090: 2020 2075 6e69 7175 655f 7074 723c 4269     unique_ptr<Bi
000000a0: 7452 6561 6465 723e 2072 6561 6465 7231  tReader> reader1
000000b0: 203d 206d 616b 655f 756e 6971 7565 3c42   = make_unique<B
000000c0: 6974 5265 6164 6572 3e28 696e 3129 3b0a  itReader>(in1);.
000000d0: 2020 2020 756e 6971 7565 5f70 7472 3c42      unique_ptr<B
000000e0: 6974 5265 6164 6572 3e20 7265 6164 6572  itReader> reader
000000f0: 3220 3d20 6d61 6b65 5f75 6e69 7175 653c  2 = make_unique<
00000100: 4269 7452 6561 6465 723e 2869 6e32 293b  BitReader>(in2);
00000110: 0a20 2020 2073 697a 655f 7420 7369 7a65  .    size_t size
00000120: 3120 3d20 7265 6164 6572 312d 3e67 6574  1 = reader1->get
00000130: 4669 6c65 5369 7a65 496e 4269 7473 2829  FileSizeInBits()
00000140: 2c20 7369 7a65 3220 3d20 7265 6164 6572  , size2 = reader
00000150: 322d 3e67 6574 4669 6c65 5369 7a65 496e  2->getFileSizeIn
00000160: 4269 7473 2829 3b0a 2020 2020 7569 6e74  Bits();.    uint
00000170: 2062 6974 7331 5b34 5d2c 2062 6974 7332   bits1[4], bits2
00000180: 5b34 5d3b 0a20 2020 2073 697a 655f 7420  [4];.    size_t 
00000190: 636f 756e 7465 7220 3d20 302c 2069 203d  counter = 0, i =
000001a0: 2030 3b0a 2020 2020 7768 696c 6520 2869   0;.    while (i
000001b0: 203c 2073 697a 6531 2026 2620 6920 3c20   < size1 && i < 
000001c0: 7369 7a65 3229 207b 0a20 2020 2020 2020  size2) {.       
000001d0: 2066 6f72 2028 7369 7a65 5f74 206a 203d   for (size_t j =
000001e0: 2030 3b20 6a20 3c20 343b 206a 2b2b 2920   0; j < 4; j++) 
000001f0: 7b0a 2020 2020 2020 2020 2020 2020 6269  {.            bi
00000200: 7473 315b 6a5d 203d 2072 6561 6465 7231  ts1[j] = reader1
00000210: 2d3e 6765 744e 6578 7442 6974 2829 3b0a  ->getNextBit();.
00000220: 2020 2020 2020 2020 2020 2020 6269 7473              bits
00000230: 325b 6a5d 203d 2072 6561 6465 7232 2d3e  2[j] = reader2->
00000240: 6765 744e 6578 7442 6974 2829 3b0a 2020  getNextBit();.  
00000250: 2020 2020 2020 7d0a 2020 2020 2020 2020        }.        
00000260: 666f 7220 2873 697a 655f 7420 6a20 3d20  for (size_t j = 
00000270: 303b 206a 203c 2034 3b20 6a2b 2b29 207b  0; j < 4; j++) {
00000280: 0a20 2020 2020 2020 2020 2020 2069 6620  .            if 
00000290: 2862 6974 7331 5b6a 5d20 213d 2062 6974  (bits1[j] != bit
000002a0: 7332 5b6a 5d29 207b 0a20 2020 2020 2020  s2[j]) {.       
000002b0: 2020 2020 2020 2020 2063 6f75 6e74 6572           counter
000002c0: 2b2b 3b0a 2020 2020 2020 2020 2020 2020  ++;.            
000002d0: 2020 2020 6272 6561 6b3b 0a20 2020 2020      break;.     
000002e0: 2020 2020 2020 207d 0a20 2020 2020 2020         }.       
000002f0: 207d 0a20 2020 2020 2020 2069 202b 3d20   }.        i += 
00000300: 343b 0a20 2020 207d 0a20 2020 2069 6620  4;.    }.    if 
00000310: 2869 203c 2073 697a 6531 207c 7c20 6920  (i < size1 || i 
00000320: 3c20 7369 7a65 3229 207b 0a20 2020 2020  < size2) {.     
00000330: 2020 2073 697a 655f 7420 686f 774d 616e     size_t howMan
00000340: 794c 6566 7420 3d20 2873 697a 6531 203c  yLeft = (size1 <
00000350: 2073 697a 6532 203f 2073 697a 6532 2d73   size2 ? size2-s
00000360: 697a 6531 203a 2073 697a 6531 2d73 697a  ize1 : size1-siz
00000370: 6532 2920 2f20 343b 0a20 2020 2020 2020  e2) / 4;.       
00000380: 2073 7472 696e 6720 6d73 6720 3d20 2250   string msg = "P
00000390: 6f7a 6f73 7461 c582 6f20 2220 2b20 746f  ozosta..o " + to
000003a0: 5f73 7472 696e 6728 686f 774d 616e 794c  _string(howManyL
000003b0: 6566 7429 202b 2022 206e 6965 7370 7261  eft) + " niespra
000003c0: 7764 7a6f 6e79 6368 2062 6c6f 6bc3 b377  wdzonych blok..w
000003d0: 2028 72c3 b3c5 bc6e 6120 64c5 8275 676f   (r....na d..ugo
000003e0: c59b c487 2070 6c69 6bc3 b377 292e 223b  .... plik..w).";
000003f0: 0a20 2020 2020 2020 2070 7269 6e74 4572  .        printEr
00000400: 726f 7228 4d49 534d 4154 4348 2c20 6d73  ror(MISMATCH, ms
00000410: 6729 3b0a 2020 2020 7d0a 2020 2020 7265  g);.    }.    re
00000420: 7475 726e 2063 6f75 6e74 6572 3b0a 7d0a  turn counter;.}.
00000430: 0a69 6e74 206d 6169 6e28 696e 7420 6172  .int main(int ar
00000440: 6763 2c20 6368 6172 2a20 6172 6776 5b5d  gc, char* argv[]
00000450: 2920 7b0a 2020 2020 636f 7574 203c 3c20  ) {.    cout << 
00000460: 6347 7265 656e 203c 3c20 222d 2d2d 2d53  cGreen << "----S
00000470: 5052 4157 445a 2d2d 2d2d 2220 3c3c 2063  PRAWDZ----" << c
00000480: 5265 7365 7420 3c3c 2065 6e64 6c3b 0a20  Reset << endl;. 
00000490: 2020 2069 6620 2861 7267 6320 213d 2033     if (argc != 3
000004a0: 2920 7b0a 2020 2020 2020 2020 7072 696e  ) {.        prin
000004b0: 7445 7272 6f72 2841 5247 554d 454e 542c  tError(ARGUMENT,
000004c0: 2022 4e69 6570 6f70 7261 776e 6120 6c69   "Niepoprawna li
000004d0: 637a 6261 2061 7267 756d 656e 74c3 b377  czba argument..w
000004e0: 2e20 5363 6865 6d61 7420 706f 6461 7761  . Schemat podawa
000004f0: 6e69 6120 6172 6775 6d65 6e74 c3b3 773a  nia argument..w:
00000500: 5c6e 3c6e 617a 7761 2070 6965 7277 737a  \n<nazwa pierwsz
00000510: 6567 6f20 706c 696b 753e 203c 6e61 7a77  ego pliku> <nazw
00000520: 6120 6472 7567 6965 676f 2070 6c69 6b75  a drugiego pliku
00000530: 3e22 293b 0a20 2020 2020 2020 2072 6574  >");.        ret
00000540: 7572 6e20 313b 0a20 2020 207d 0a20 2020  urn 1;.    }.   
00000550: 2073 7472 696e 6720 696e 3120 3d20 6172   string in1 = ar
00000560: 6776 5b31 5d2c 2069 6e32 203d 2061 7267  gv[1], in2 = arg
00000570: 765b 325d 3b0a 2020 2020 636f 7574 203c  v[2];.    cout <
00000580: 3c20 6347 7265 656e 203c 3c20 2250 4f44  < cGreen << "POD
00000590: 414e 4520 5041 5241 4d45 5452 595c 6e49  ANE PARAMETRY\nI
000005a0: 6e70 7574 313a 2022 203c 3c20 696e 3120  nput1: " << in1 
000005b0: 3c3c 2022 5c6e 496e 7075 7432 3a20 2220  << "\nInput2: " 
000005c0: 3c3c 2069 6e32 203c 3c20 6352 6573 6574  << in2 << cReset
000005d0: 203c 3c20 656e 646c 3b0a 2020 2020 7369   << endl;.    si
000005e0: 7a65 5f74 2063 6f75 6e74 6572 203d 2073  ze_t counter = s
000005f0: 7072 6177 647a 2869 6e31 2c20 696e 3229  prawdz(in1, in2)
00000600: 3b0a 2020 2020 636f 7574 203c 3c20 6342  ;.    cout << cB
00000610: 6c75 6520 3c3c 2022 5a6e 616c 657a 696f  lue << "Znalezio
00000620: 6e6f 2022 203c 3c20 636f 756e 7465 7220  no " << counter 
00000630: 3c3c 2022 206e 6965 7a67 6f64 6e79 6368  << " niezgodnych
00000640: 2034 2d62 6974 6f77 7963 6820 626c 6f6b   4-bitowych blok
00000650: c3b3 772e 2220 3c3c 2063 5265 7365 7420  ..w." << cReset 
00000660: 3c3c 2065 6e64 6c3b 0a20 2020 2072 6574  << endl;.    ret
00000670: 7572 6e20 303b 0a7d                      urn 0;.}
